import{_ as t,o as a,c as e,O as d}from"./chunks/framework.4afe7240.js";const l="/assets/20230608093331376.16d5b6fa.png",m=JSON.parse('{"title":"UART工作原理","description":"","frontmatter":{"tags":"待成文","aliases":["UART帧格式","串口帧格式"],"title":"UART工作原理","date":"2023-06-07T00:00:00.000Z"},"headers":[],"relativePath":"pages/UART工作原理.md","filePath":"pages/UART工作原理.md","lastUpdated":1686248495000}'),r={name:"pages/UART工作原理.md"},o=d('<h1 id="uart工作原理" tabindex="-1">UART工作原理 <a class="header-anchor" href="#uart工作原理" aria-label="Permalink to &quot;UART工作原理&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p><a href="./UART.html">UART</a> 的帧格式包括</p><ul><li>空闲位 默认高电平</li><li>起始位 默认低电平</li><li>数据位 从低位到高位发送数据（5~8位）</li><li>校验位 自定义，一般采用采用奇/偶校验 （1的个数）</li><li>停止位</li></ul><p><img src="'+l+'" alt=""></p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>以 <code>0x55 </code>为例，即数据为<code>01010101</code></p><table><thead><tr><th>空闲位</th><th>起始位</th><th>数据位</th><th>校验位</th><th>停止位</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>10101010</td><td>1</td><td>1</td></tr></tbody></table><p>如何知道 UART 发送了几位 #待收录</p><ul><li>通过 [[波特率]] 得知</li></ul>',10),i=[o];function s(h,_,c,n,p,T){return a(),e("div",null,i)}const A=t(r,[["render",s]]);export{m as __pageData,A as default};

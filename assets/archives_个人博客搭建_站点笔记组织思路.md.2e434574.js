import{_ as e,o as a,c as l,O as i}from"./chunks/framework.4afe7240.js";const f=JSON.parse('{"title":"站点笔记组织思路","description":"","frontmatter":{},"headers":[],"relativePath":"archives/个人博客搭建/站点笔记组织思路.md","filePath":"archives/个人博客搭建/站点笔记组织思路.md","lastUpdated":1685457431000}'),o={name:"archives/个人博客搭建/站点笔记组织思路.md"},r=i('<h1 id="站点笔记组织思路" tabindex="-1">站点笔记组织思路 <a class="header-anchor" href="#站点笔记组织思路" aria-label="Permalink to &quot;站点笔记组织思路&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>以前我一直是把 <code>obsidian</code> 当作本地的一个 <strong>all in one</strong> 工具，但长久使用下来其实不是那么好使。最近看到 <a href="https://hqy.life/" target="_blank" rel="noreferrer">邃境</a> 老哥的博客，他不是聚焦于ob本身，而是将ob只是作为服务web端的本地编辑管理工具，和 <a href="https://www.bilibili.com/video/BV1y44y137N8/?spm_id_from=333.337.search-card.all.click&amp;vd_source=8f0a7910abc46a7f7258da6ae2e0d504" target="_blank" rel="noreferrer">这个</a>比较类似的思路，将本地的内容发布出来达到输出的效果。因此这也是我本次建站的原因</p><h2 id="目录介绍" tabindex="-1">目录介绍 <a class="header-anchor" href="#目录介绍" aria-label="Permalink to &quot;目录介绍&quot;">​</a></h2><p>我主要的思路还是延续之前本地的组织方式 <code>P.A.R.A</code>，以项目为导向的输入内容</p><ul><li>笔记组织目录 <ul><li>Project 正在做的项目</li><li>Area 近期关注的领域，存放少部分笔记</li><li>Resources 笔记仓库，笔记的主要存放区域</li><li>Archives 完成的项目</li></ul></li><li>其他目录 <ul><li>inbox 输入页面，名称为 <code>yy-MM-dd</code> 的名称 <ul><li>取代传统的单一的inbox，每天打开都是空白的一夜降低输入的压力，随意记录，保留一段时候后就可以删除</li></ul></li><li>timeline 记录所有创建的笔记 <ul><li>这就是一个日志文件，用于统计</li></ul></li><li>about 自我介绍</li></ul></li></ul><h2 id="主要流程" tabindex="-1">主要流程 <a class="header-anchor" href="#主要流程" aria-label="Permalink to &quot;主要流程&quot;">​</a></h2><ul><li>每天再 <code>Inbox</code> 中输入随笔，挑选其中重要的成文，放入 <code>Resource</code>，当作资料存储</li><li>有做什么的想法，就在 <code>Project</code> 中创建一个新的项目，需要具备预期的时间和目标，项目中产生的笔记一九存放在项目中，但要在 <code>Timeline</code> 统计记录一份</li><li>相比 Resource 可能只是存储兴趣，但动力不大的资料，在 <code>Area</code> 中， 会存放近期比较关注的内容，当不太关注也可移入 Resource 中</li><li>当项目完成后，将整个项目归档在 <code>Archives</code> 中</li><li>这四个<strong>笔记组织目录</strong>的内容可以相互流转，并不是固定的</li></ul>',8),t=[r];function c(d,s,n,_,h,u){return a(),l("div",null,t)}const p=e(o,[["render",c]]);export{f as __pageData,p as default};

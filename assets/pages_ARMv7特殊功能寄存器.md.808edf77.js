import{_ as l,o as e,c as i,V as a}from"./chunks/framework.364d6ed5.js";const m=JSON.parse('{"title":"ARMv7特殊功能寄存器","description":"","frontmatter":{"tags":"概念","aliases":"特殊功能寄存器","title":"ARMv7特殊功能寄存器","sidebar":false,"date":"2023-06-06T00:00:00.000Z"},"headers":[],"relativePath":"pages/ARMv7特殊功能寄存器.md","filePath":"pages/ARMv7特殊功能寄存器.md","lastUpdated":1686486577000}'),t={name:"pages/ARMv7特殊功能寄存器.md"},r=a('<h1 id="armv7特殊功能寄存器" tabindex="-1">ARMv7特殊功能寄存器 <a class="header-anchor" href="#armv7特殊功能寄存器" aria-label="Permalink to &quot;ARMv7特殊功能寄存器&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>#待学习</p><ul><li>CPSR（Current Program Status Register） <ul><li>当前程序状态寄存器，用于存储当前处理器的状态信息，例如处理器模式、中断使能状态、条件码等。</li></ul></li><li>SPSR（Saved Program Status Register） <ul><li>保存的程序状态寄存器，用于在处理器模式切换时保存当前的CPSR值。</li></ul></li><li>PC（Program Counter） <ul><li>程序计数器，用于存储下一条要执行的指令的地址。</li></ul></li><li>LR（Link Register） <ul><li>链接寄存器，用于存储函数调用前的返回地址。</li></ul></li><li>SP（Stack Pointer） <ul><li>堆栈指针，用于存储当前堆栈的栈顶地址。</li></ul></li><li>R0-R15（General-Purpose Registers） <ul><li>通用寄存器，用于存储处理器和程序的各种数据。</li></ul></li><li>NVIC（Nested Vectored Interrupt Controller） <ul><li>嵌套向量中断控制器，用于管理中断请求和中断处理。</li></ul></li><li>SCB（System Control Block） <ul><li>系统控制块，用于控制处理器和系统的各种特殊功能，例如时钟、复位、电源管理等。</li></ul></li><li>MPU（Memory Protection Unit） <ul><li>内存保护单元，用于保护系统的内存不受非法访问和攻击。</li></ul></li><li>SysTic <ul><li>系统定时器，用于提供系统的时钟和定时功能。</li></ul></li></ul><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>这些寄存器<strong>没有地址</strong></li><li>访问这些寄存器在CPU内部</li></ul>',6),o=[r];function s(u,n,_,c,d,h){return e(),i("div",null,o)}const p=l(t,[["render",s]]);export{m as __pageData,p as default};

import{_ as a,o as e,c as t,O as i}from"./chunks/framework.4afe7240.js";const u=JSON.parse('{"title":"big.LITTLE架构","description":"","frontmatter":{"tags":"待成文","title":"big.LITTLE架构","sidebar":false,"date":"2023-06-06T00:00:00.000Z"},"headers":[],"relativePath":"pages/big.LITTLE架构.md","filePath":"pages/big.LITTLE架构.md","lastUpdated":1686286684000}'),l={name:"pages/big.LITTLE架构.md"},r=i('<h1 id="big-little架构" tabindex="-1">big.LITTLE架构 <a class="header-anchor" href="#big-little架构" aria-label="Permalink to &quot;big.LITTLE架构&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><ul><li>是英国ARM公司推出的一种处理器架构</li><li>将两种不同的处理器核心组合在一起 <ul><li>一种是高性能的大核心，另一种是低功耗的小核心。</li></ul></li></ul><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>平衡高性能和低功耗之间的矛盾。</p><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>在大多数情况下，处理器会使用小核心来完成一些简单的任务，以节省功耗</li><li>而在需要更高性能的情况下，处理器会自动切换到大核心来完成任务。</li></ul>',7),o=[r];function s(n,_,d,c,h,T){return e(),t("div",null,o)}const p=a(l,[["render",s]]);export{u as __pageData,p as default};
